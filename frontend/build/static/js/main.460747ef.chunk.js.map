{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","todoList","activeItem","id","title","completed","editing","fetchTasks","bind","handleChange","handleSubmit","getCookie","deleteItem","startEdit","strikeUnstrike","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","this","console","log","fetch","then","response","json","data","setState","e","target","value","preventDefault","csrftoken","url","method","headers","body","JSON","stringify","res","task","tasks","self","className","onSubmit","style","flex","onChange","type","placeholder","map","index","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.460747ef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\n\n// const App = () => {\n//   const [todoList, setTodoList] = useState([])\n\n//   useEffect(() => {\n//     const fetchTasks = async () => {\n//       let url = 'http://localhost:8000/api/task-list/'\n//       await fetch(url)\n//       .then(res => res.json())\n//       .then(data => setTodoList(data))\n//     }\n//     fetchTasks()\n//   })\n\n//   return (\n//     <div className=\"container\">\n//       <div id=\"task-container\">\n//         <div id=\"form-wrapper\">\n//           <form id=\"form\">\n//             <div className=\"flex-wrapper\">\n//               <div style={{ flex: 6 }}>\n//                 <input className=\"form-control\" id=\"title\" type='text' name='title' placeholder='Add Task'></input>\n//               </div>\n//               <div style={{ flex: 1 }}>\n//                 <input className=\"btn btn-warning\" name='Add' id='submit' type='submit'></input>\n//               </div>\n//             </div>\n//           </form>\n//         </div>\n//         <div id=\"list-wrapper\">\n//           {\n//             todoList.map(task => {\n//               return (\n//                 <div className=\"task-wrapper flex-wrapper\" key={task.id}>\n//                   <div style={{ flex:7 }}>\n//                     <span>{task.title}</span>\n//                   </div>\n//                   <div style={{ flex:1 }}>\n//                     <button className='btn btn-sm btn-outline-info'>Edit</button>\n//                   </div>\n//                   <div style={{ flex:1 }}>\n//                     <button className='btn btn-sm btn-outline-dark delete'>Delete</button>\n//                   </div>\n//                 </div>\n//               )\n//             })\n//           }\n//         </div>\n//       </div>\n//     </div>\n//   )\n// }\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      todoList: [],\n      activeItem: {\n        id: null,\n        title: '',\n        completed: false\n      },\n      editing: false,\n    }\n    this.fetchTasks = this.fetchTasks.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.getCookie  = this.getCookie.bind(this)\n    this.deleteItem  = this.deleteItem.bind(this)\n    this.startEdit  = this.startEdit.bind(this)\n    this.strikeUnstrike  = this.strikeUnstrike.bind(this)\n  }\n\n  getCookie(name) {\n      let cookieValue = null;\n      if (document.cookie && document.cookie !== '') {\n          const cookies = document.cookie.split(';');\n          for (let i = 0; i < cookies.length; i++) {\n              const cookie = cookies[i].trim();\n              // Does this cookie string begin with the name we want?\n              if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                  cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                  break;\n              }\n          }\n      }\n      return cookieValue;\n  }\n\n  componentWillMount() {\n    this.fetchTasks()\n  }\n\n  fetchTasks() {\n    console.log('Fetching.....')\n    fetch('http://localhost:8000/api/task-list/')\n    .then(response => response.json())\n    .then(data => this.setState({\n      todoList: data\n    }))\n  }\n\n  handleChange(e) {\n    let name = e.target.name\n    let value = e.target.value\n\n    this.setState({\n      activeItem: {\n        ...this.state.activeItem, title:value\n      }\n    })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n\n    let csrftoken = this.getCookie('csrftoken')\n    let url = 'http://localhost:8000/api/task-create/'\n\n    if (this.state.editing === true) {\n      url = `http://localhost:8000/api/task-update/${this.state.activeItem.id}/`\n      this.setState({\n        editing: false\n      })\n    }\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: JSON.stringify(this.state.activeItem)\n    })\n    .then(res => {\n      this.fetchTasks()\n      this.setState({\n        activeItem: {\n          id: null,\n          title: '',\n          completed: false\n        }\n      })\n    })\n  }\n\n  startEdit(task) {\n    this.setState({\n      activeItem: task,\n      editing: true\n    })\n  }\n\n  strikeUnstrike(task) {\n    task.completed = !task.completed\n    let csrftoken = this.getCookie('csrftoken')\n    let url = `http://localhost:8000/api/task-update/${task.id}/`\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: JSON.stringify({\n        'completed': task.completed,\n        'title': task.title\n      })\n    })\n    .then(res => {\n      this.fetchTasks()\n    })\n  }\n\n  deleteItem(task) {\n    let csrftoken = this.getCookie('csrftoken')\n    let url = `http://localhost:8000/api/task-delete/${task.id}/`\n    fetch(url, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n    })\n    .then(res => {\n      this.fetchTasks()\n    })\n  }\n\n  render() {\n    let tasks = this.state.todoList\n    let self = this\n\n    return (\n      <div className=\"container\">\n        <div id=\"task-container\">\n          <div id=\"form-wrapper\">\n            <form onSubmit={this.handleSubmit} id=\"form\">\n              <div className=\"flex-wrapper\">\n                <div style={{ flex: 6 }}>\n                  <input onChange={this.handleChange} className=\"form-control\" id=\"title\" value={ this.state.activeItem.title } type='text' name='title' placeholder='Add Task'></input>\n                </div>\n                <div style={{ flex: 1 }}>\n                  <input className=\"btn btn-warning\" name='Add' id='submit' type='submit'></input>\n                </div>\n              </div>\n            </form>\n          </div>\n          <div id=\"list-wrapper\">\n            { tasks.map(function(task, index) {\n              return (\n                <div className=\"task-wrapper flex-wrapper\" key={index}>\n                  <div onClick={() => self.strikeUnstrike(task)} style={{ flex:7 }}>\n                    {\n                      task.completed == false ? (<span>{task.title}</span>) : (<strike>{task.title}</strike>)\n                    }\n                  </div>\n                  <div style={{ flex:1 }}>\n                    <button onClick={() => self.startEdit(task)} className='btn btn-sm btn-outline-info'>Edit</button>\n                  </div>\n                  <div style={{ flex:1 }}>\n                    <button className='btn btn-sm btn-outline-dark delete' onClick={() => self.deleteItem(task)}>Delete</button>\n                  </div>\n                </div>\n              )\n            }) \n          }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}